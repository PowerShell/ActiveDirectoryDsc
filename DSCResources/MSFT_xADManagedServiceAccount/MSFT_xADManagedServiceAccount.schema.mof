[ClassVersion("1.0.1.0"), FriendlyName("xADManagedServiceAccount")]
class MSFT_xADManagedServiceAccount : OMI_BaseResource
{
    [Key, Description("Name of the domain where the user account is located (only used if password is managed)")] String DomainName;
    [Key, Description("Specifies the Security Account Manager (SAM) account name of the user (ldapDisplayName 'sAMAccountName')")] String UserName;
    [Write, Description("Specifies whether the user account is created or deleted"), ValueMap{"Present", "Absent"},Values{"Present", "Absent"}] String Ensure;
    [Write, Description("Specifies the DNS Host Name assigned to the user account")] String DNSHostName;
    [Write, Description("Specifies the display name of the object (ldapDisplayName 'displayName')")] String DisplayName;
    [Write, Description("Specifies the X.500 path of the Organizational Unit (OU) or container where the new object is created")] String Path;
    [Write, Description("Specifies a description of the object (ldapDisplayName 'description')")] String Description;
    [Write, Description("Specifies SPNs to be set")] String ServicePrincipalName[];
    [Write, Description("Specifies if the account is enabled (default True)")] Boolean Enabled;
    [Write, Description("Specifies a time when account will expire")] DateTime AccountExpirationDate;
    [Write, Description("Specifies a whether account be delegated")] Boolean AccountNotDelegated;
    [Write, Description("Specifies a whether account is to be trusted for delegation")] Boolean TrustedForDelegation;
    [Write, Description("Specifies a whether kerberos authorization data for user devices is supported")] Boolean CompoundIdentitySupported;
    [Write, Description("Specifies how often the password is changed")] uInt32 ManagedPasswordIntervalInDays;
    [Write, Description("Specifies to whom account is delegated")] String PrincipalsAllowedToDelegateToAccount[];
    [Write, Description("Specifies who can retrieve account password")] String PrincipalsAllowedToRetrieveManagedPassword[];
    [Write, Description("Specifies a whether account is restricted to single Computer only")] Boolean RestrictToSingleComputer;
    [Write, Description("Specifies the Active Directory Domain Services instance to use to perform the task.")] String DomainController;
    [Write, Description("Specifies the user account credentials to use to perform this task"), EmbeddedInstance("MSFT_Credential")] String DomainAdministratorCredential;
    [Write, Description("Specifies the authentication context type used when testing passwords"), ValueMap{"Default","Negotiate"},Values{"Default","Negotiate"}] String PasswordAuthentication;
    [Read, Description("Returns the X.500 path of the object")] String DistinguishedName;
};

