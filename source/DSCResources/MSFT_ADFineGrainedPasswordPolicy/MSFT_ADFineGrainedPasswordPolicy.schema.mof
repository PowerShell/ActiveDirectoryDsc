[ClassVersion("1.0.0"), FriendlyName("ADFineGrainedPasswordPolicy")]
class MSFT_ADFineGrainedPasswordPolicy : OMI_BaseResource
{
    [Key, Description("Specifies an Active Directory fine-grained password policy object name.")] String Name;
    [Required, Description("Specifies a value that defines the precedence of a fine-grained password policy among all fine-grained password policies.")] UInt32 Precedence;
    [Write, Description("Specifies the display name of the object.")] String DisplayName;
    [Write, Description("Specifies the ADPrincipal names the policy is to be applied to, overwrites all existing.")] String Subjects[];
    [Write, Description("Specifies whether the fine-grained password policy should be present or absent. Default value is 'Present'."), ValueMap{"Present", "Absent"}, Values{"Present", "Absent"}] String Ensure;
    [Write, Description("Specifies whether password complexity is enabled for the password policy.")] Boolean ComplexityEnabled;
    [Write, Description("Specifies the length of time that an account is locked after the number of failed login attempts exceeds the lockout threshold (timespan minutes).")] String LockoutDuration;
    [Write, Description("Specifies the maximum time interval between two unsuccessful login attempts before the number of unsuccessful login attempts is reset to 0 (timespan minutes).")] String LockoutObservationWindow;
    [Write, Description("Specifies the number of unsuccessful login attempts that are permitted before an account is locked out.")] UInt32 LockoutThreshold;
    [Write, Description("Specifies the minimum length of time before you can change a password (timespan days).")] String MinPasswordAge;
    [Write, Description("Specifies the maximum length of time that you can have the same password (timespan days).")] String MaxPasswordAge;
    [Write, Description("Specifies the minimum number of characters that a password must contain.")] UInt32 MinPasswordLength;
    [Write, Description("Specifies the number of previous passwords to save.")] UInt32 PasswordHistoryCount;
    [Write, Description("Specifies whether the directory must store passwords using reversible encryption.")] Boolean ReversibleEncryptionEnabled;
    [Write, Description("Specifies whether to prevent the object from being deleted.")] Boolean ProtectedFromAccidentalDeletion;
    [Write, Description("Specifies the Active Directory Domain Services instance to connect to.")] String DomainController;
    [Write, Description("Specifies the user account credentials to use to perform this task."), EmbeddedInstance("MSFT_Credential")] String Credential;
};

